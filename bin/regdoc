#!/usr/bin/perl -s -w

require 5;
($Myname = $0) =~ s!.*/!!o;

use lib '/home/andrewb/lib';
use lib '/home/andrewb/ABO/lib';
use ABO;
use ABO::AccountList;
use DayDate qw(day_to_date);
use File::Basename;
use Carp qw(cluck);

use vars qw($t $v);

my $abo = new ABO(-error => \&error) or exit 1;

for $fn (@ARGV)
{
	my $doc = $abo->docbase->make_document($fn) or next;
	printdoc($doc) if $v;
	printtrans($doc) if $t;
	registerdoc($abo, $doc, $fn);
}

sub printdoc
{
	my $doc = shift;
	print "Document type: ", $doc->handle->doctype, "\n";
	print "Ref: ", $doc->handle->ref, "\n";
	print "$_: ", $doc->attribute($_), "\n" foreach $doc->attributes;
}

sub printtrans
{
	my $doc = shift;
	print "$_\n" foreach $doc->transactions;
}

sub registerdoc
{
	my ($abo, $doc, $file) = @_;

	if ($abo->docbase->get_document($doc->handle))
	{
		error("\"$file\": document `".$doc->handle."' already registered");
		return undef;
	}

	my @s = stat $file;
	unless (@s)
	{
		error("cannot stat `$file' - $!");
		return undef;
	}
	my $mtime = $s[9];
	if (!&mkbak($file))
	{
		error("cannot make backup of `$file' - $! - not registered");
		return undef;
	}

	my $f = $abo->docbase->add_document($doc) or return undef;

	unlink $file;
	if (!symlink $f, $file)
	{
		error("cannot make symbolic link `$file'->`$f' - $!");
		return undef;
	}
	return 1;
}

sub mkbak
{
	my $f = shift;
	my $fbak = dirname($f).'/,'.basename($f);
	link $f, $fbak;
}

sub error
{
	warn "$Myname: ", @_, "\n";
}
