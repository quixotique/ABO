#!/usr/bin/perl -w

require 5;
use lib '/home/andrewb/lib';
use lib '/home/andrewb/ABO/lib';

use Getopt::Long;
use DayDate qw(time_to_day date_to_day);
use ABO;
use ABO::Transaction;

($Myname = $0) =~ s!.*/!!o;
sub Usage
{
	print STDERR
"Usage: $Myname [-help] [<options> ...]

Print a dump of transactions.

   -from <date>  Omit transactions before <date>, bringing forward the
                 balance of all asset/liability accounts.
   -to <date>    Omit transactions after <date>.
   -file <f>     Read transactions from the named file (a file of -
		 means standard input) instead of the ABO document base.
   -force        Force re-compilation of all source documents.
   -cash         Convert accrual accounts into cash accounts.
   -verbose      Whistle as you work.
";
}

# Parse command-line options and arguments.

$opt_help = 0;
$opt_from = '';
$opt_to = '';
$opt_quiet = 0;
$opt_force = 0;
$opt_cash = 0;
$opt_verbose = 0;
$opt_file = '';
if (!GetOptions('help', 'quiet', 'from=s', 'to=s', 'file=s',
		'force', 'cash', 'verbose',
	)
)
{
	&Usage;
	exit 1;
}
if ($opt_help)
{
	&Usage;
	exit 0;
}

my $abo = new ABO (
	-error => sub { print STDERR "$Myname: ", @_, "\n"; },
	-source => $opt_file eq '-'
		? \*STDIN
		: length($opt_file) ? $opt_file : undef,
	-regenerate_cache => $opt_force,
	-cash => $opt_cash,
	-verbose => $opt_verbose,
) or exit 1;

my $from = $abo->parse_from_date($opt_from) or exit 1;
my $to = $abo->parse_to_date($opt_to) or exit 1;

my @trans = $abo->transactions($from, $to);
unless ($opt_quiet)
{
	print "$_\n" foreach @trans;
}

exit 0;
