#!/usr/bin/env python3

import sys
import os.path
import locale
import mailbox
import subprocess
import email.utils

try:
    import abo.email.folder
except ImportError:
    sys.path.append(os.path.join(os.path.dirname(os.path.abspath(sys.argv[0])), '..', 'lib'))
    import abo.email.folder

opt_dry_run = False
me = os.path.basename(sys.argv[0])

def main():
    locale.setlocale(locale.LC_ALL, '')
    folders_path = os.path.join(os.environ['HOME'], 'etc', 'folders')
    with open(folders_path, 'r') as f:
        filer = abo.email.folder.Filer(f.read())
    global opt_dry_run
    dest_folder_name = None
    args = sys.argv[1:]
    mhpath_args = []
    while args:
        arg = args.pop(0)
        if arg in ['-t', '--test', '-n', '--dry-run']:
            opt_dry_run = True
        elif arg in ['-s', '--src']:
            if not args:
                fatal('missing argument after {arg}')
            if not args[0].startswith('+'):
                fatal('invalid argument after {arg}: {args[0]}')
            mhpath_args.append(args.pop(0))
        elif arg.startswith('+'):
            dest_folder_name = arg[1:]
        else:
            mhpath_args.append(arg)
    mhpath_args = mhpath_args or ['.']
    message_paths = subprocess.check_output(['mhpath'] + mhpath_args, encoding='utf-8').splitlines()
    saved = 0
    not_saved = 0
    failed = 0
    for message_path in message_paths:
        message_number = message_path.rsplit('/', maxsplit=1)[1]
        if not os.path.exists(message_path):
            print(f'{me}: message {message_number} doesn\'t exist', file=sys.stderr)
            continue
        if dest_folder_name:
            if run(['refile', f'{message_number}', f'+{dest_folder_name}']) != 0:
                failed += 1
            else:
                saved += 1
            continue
        with open(message_path, 'r', errors='replace') as f:
            header = []
            for line in f:
                header.append(line)
                if not line or line.isspace(): break
            message = mailbox.MHMessage(''.join(header))
            from_address = email.utils.parseaddr(message['from'])[1]
            to_addresses = [email.utils.parseaddr(a)[1] for a in message.get_all('to') or ()]
            #cc_addresses = [email.utils.parseaddr(a)[1] for a in message.get_all('cc') or ()]
            subject = message['subject']
            folders = filer.lookup_message(from_address=from_address, to_addresses=to_addresses, subject=subject)
            if not folders:
                print(f'{me}: message {message_number} not saved', file=sys.stderr)
                not_saved += 1
            elif run(['refile', f'{message_number}'] + [f'+{folder.name}' for folder in sorted(folders)]) != 0:
                failed += 1
            else:
                saved += 1
    print(('dry run: ' if opt_dry_run else '') + f'saved {saved}, not saved {not_saved}, failed {failed}')
    sys.exit(3 if failed else 2 if not_saved else 0)

def run(args):
    print(' '.join(args))
    if opt_dry_run:
        return 0
    return subprocess.run(args).returncode

def fatal(message):
    print(f'{me}: {message}', file=sys.stderr)
    sys.exit(1)

main()
